{"remainingRequest":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/babel-loader/lib/index.js!/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/thanitnetprokaew/Desktop/yfhs/website/src/state/modules/authfack.js","dependencies":[{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/src/state/modules/authfack.js","mtime":1655813586800},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/cache-loader/dist/cjs.js","mtime":1647752128109},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/babel-loader/lib/index.js","mtime":1647752127988},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1647752168120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXNlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2F1dGhzZXJ2aWNlL3VzZXIuc2VydmljZSc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vLi4vcm91dGVyL2luZGV4JzsKdmFyIHVzZXIgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyJykpOwpleHBvcnQgdmFyIHN0YXRlID0gdXNlciA/IHsKICBzdGF0dXM6IHsKICAgIGxvZ2dlZHVzZXI6IHRydWUKICB9LAogIHVzZXI6IHVzZXIKfSA6IHsKICBzdGF0dXM6IHt9LAogIHVzZXI6IG51bGwKfTsKZXhwb3J0IHZhciBhY3Rpb25zID0gewogIC8vIExvZ3MgaW4gdGhlIHVzZXIuCiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIF9yZWYyKSB7CiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLAogICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgdmFyIGVtYWlsID0gX3JlZjIuZW1haWwsCiAgICAgICAgcGFzc3dvcmQgPSBfcmVmMi5wYXNzd29yZDsKICAgIGNvbW1pdCgnbG9naW5SZXF1ZXN0JywgewogICAgICBlbWFpbDogZW1haWwKICAgIH0pOwogICAgdXNlclNlcnZpY2UubG9naW4oZW1haWwsIHBhc3N3b3JkKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIGNvbW1pdCgnbG9naW5TdWNjZXNzJywgdXNlcik7CiAgICAgIHJvdXRlci5wdXNoKCcvJyk7CiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29tbWl0KCdsb2dpbkZhaWx1cmUnLCBlcnJvcik7CiAgICAgIGRpc3BhdGNoKCdub3RpZmljYXRpb24vZXJyb3InLCBlcnJvciwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIExvZ291dCB0aGUgdXNlcgogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KF9yZWYzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgdXNlclNlcnZpY2UubG9nb3V0KCk7CiAgICBjb21taXQoJ2xvZ291dCcpOwogIH0sCiAgLy8gcmVnaXN0ZXIgdGhlIHVzZXIKICByZWdpc3RlcnVzZXI6IGZ1bmN0aW9uIHJlZ2lzdGVydXNlcihfcmVmNCwgdXNlcikgewogICAgdmFyIGRpc3BhdGNoID0gX3JlZjQuZGlzcGF0Y2gsCiAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgY29tbWl0KCdyZWdpc3RlclJlcXVlc3QnLCB1c2VyKTsKICAgIHVzZXJTZXJ2aWNlLnJlZ2lzdGVyKHVzZXIpLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgY29tbWl0KCdyZWdpc3RlclN1Y2Nlc3MnLCB1c2VyKTsKICAgICAgZGlzcGF0Y2goJ25vdGlmaWNhdGlvbi9zdWNjZXNzJywgJ1JlZ2lzdHJhdGlvbiBzdWNjZXNzZnVsJywgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICAgIHJvdXRlci5wdXNoKCcvbG9naW4nKTsKICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICBjb21taXQoJ3JlZ2lzdGVyRmFpbHVyZScsIGVycm9yKTsKICAgICAgZGlzcGF0Y2goJ25vdGlmaWNhdGlvbi9lcnJvcicsIGVycm9yLCB7CiAgICAgICAgcm9vdDogdHJ1ZQogICAgICB9KTsKICAgIH0pOwogIH0KfTsKZXhwb3J0IHZhciBtdXRhdGlvbnMgPSB7CiAgbG9naW5SZXF1ZXN0OiBmdW5jdGlvbiBsb2dpblJlcXVlc3Qoc3RhdGUsIHVzZXIpIHsKICAgIHN0YXRlLnN0YXR1cyA9IHsKICAgICAgbG9nZ2luZ0luOiB0cnVlCiAgICB9OwogICAgc3RhdGUudXNlciA9IHVzZXI7CiAgfSwKICBsb2dpblN1Y2Nlc3M6IGZ1bmN0aW9uIGxvZ2luU3VjY2VzcyhzdGF0ZSwgdXNlcikgewogICAgc3RhdGUuc3RhdHVzID0gewogICAgICBsb2dnZWR1c2VyOiB0cnVlCiAgICB9OwogICAgc3RhdGUudXNlciA9IHVzZXI7CiAgfSwKICBsb2dpbkZhaWx1cmU6IGZ1bmN0aW9uIGxvZ2luRmFpbHVyZShzdGF0ZSkgewogICAgc3RhdGUuc3RhdHVzID0ge307CiAgICBzdGF0ZS51c2VyID0gbnVsbDsKICB9LAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICBzdGF0ZS5zdGF0dXMgPSB7fTsKICAgIHN0YXRlLnVzZXIgPSBudWxsOwogIH0sCiAgcmVnaXN0ZXJSZXF1ZXN0OiBmdW5jdGlvbiByZWdpc3RlclJlcXVlc3Qoc3RhdGUpIHsKICAgIHN0YXRlLnN0YXR1cyA9IHsKICAgICAgcmVnaXN0ZXJpbmc6IHRydWUKICAgIH07CiAgfSwKICByZWdpc3RlclN1Y2Nlc3M6IGZ1bmN0aW9uIHJlZ2lzdGVyU3VjY2VzcyhzdGF0ZSkgewogICAgc3RhdGUuc3RhdHVzID0ge307CiAgfSwKICByZWdpc3RlckZhaWx1cmU6IGZ1bmN0aW9uIHJlZ2lzdGVyRmFpbHVyZShzdGF0ZSkgewogICAgc3RhdGUuc3RhdHVzID0ge307CiAgfQp9Ow=="},{"version":3,"sources":["/Users/thanitnetprokaew/Desktop/yfhs/website/src/state/modules/authfack.js"],"names":["userService","router","user","JSON","parse","localStorage","getItem","state","status","loggeduser","actions","login","dispatch","commit","email","password","then","push","error","root","logout","registeruser","register","mutations","loginRequest","loggingIn","loginSuccess","loginFailure","registerRequest","registering","registerSuccess","registerFailure"],"mappings":"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","sourcesContent":["import { userService } from '../../helpers/authservice/user.service';\nimport router from '../../router/index'\n\nconst user = JSON.parse(localStorage.getItem('user'));\nexport const state = user\n    ? { status: { loggeduser: true }, user }\n    : { status: {}, user: null };\n\nexport const actions = {\n    // Logs in the user.\n    // eslint-disable-next-line no-unused-vars\n    login({ dispatch, commit }, { email, password }) {\n        commit('loginRequest', { email });\n\n        userService.login(email, password)\n            .then(\n                user => {\n                    commit('loginSuccess', user);\n                    router.push('/');\n                },\n                error => {\n                    commit('loginFailure', error);\n                    dispatch('notification/error', error, { root: true });\n                }\n            );\n    },\n    // Logout the user\n    logout({ commit }) {\n        userService.logout();\n        commit('logout');\n    },\n    // register the user\n    registeruser({ dispatch, commit }, user) {\n        commit('registerRequest', user);\n        userService.register(user)\n            .then(\n                user => {\n                    commit('registerSuccess', user);\n                    dispatch('notification/success', 'Registration successful', { root: true });\n                    router.push('/login');\n                },\n                error => {\n                    commit('registerFailure', error);\n                    dispatch('notification/error', error, { root: true });\n                }\n            );\n    }\n};\n\nexport const mutations = {\n    loginRequest(state, user) {\n        state.status = { loggingIn: true };\n        state.user = user;\n    },\n    loginSuccess(state, user) {\n        state.status = { loggeduser: true };\n        state.user = user;\n    },\n    loginFailure(state) {\n        state.status = {};\n        state.user = null;\n    },\n    logout(state) {\n        state.status = {};\n        state.user = null;\n    },\n    registerRequest(state) {\n        state.status = { registering: true };\n    },\n    registerSuccess(state) {\n        state.status = {};\n    },\n    registerFailure(state) {\n        state.status = {};\n    }\n};\n\n"]}]}