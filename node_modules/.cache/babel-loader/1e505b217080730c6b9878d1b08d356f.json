{"remainingRequest":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/babel-loader/lib/index.js!/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/thanitnetprokaew/Desktop/yfhs/website/src/helpers/authservice/user.service.js","dependencies":[{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/src/helpers/authservice/user.service.js","mtime":1655813586782},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/cache-loader/dist/cjs.js","mtime":1647752128109},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/babel-loader/lib/index.js","mtime":1647752127988},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1647752168120}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCB7IGF1dGhIZWFkZXIgfSBmcm9tICcuL2F1dGgtaGVhZGVyJzsKZXhwb3J0IHZhciB1c2VyU2VydmljZSA9IHsKICBsb2dpbjogbG9naW4sCiAgbG9nb3V0OiBsb2dvdXQsCiAgcmVnaXN0ZXI6IHJlZ2lzdGVyLAogIGdldEFsbDogZ2V0QWxsCn07CgpmdW5jdGlvbiBsb2dpbihlbWFpbCwgcGFzc3dvcmQpIHsKICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICBtZXRob2Q6ICdQT1NUJywKICAgIGhlYWRlcnM6IHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgfSwKICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgZW1haWw6IGVtYWlsLAogICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgIH0pCiAgfTsKICByZXR1cm4gZmV0Y2goIi91c2Vycy9hdXRoZW50aWNhdGUiLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSkudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgLy8gbG9naW4gc3VjY2Vzc2Z1bCBpZiB0aGVyZSdzIGEgand0IHRva2VuIGluIHRoZSByZXNwb25zZQogICAgaWYgKHVzZXIudG9rZW4pIHsKICAgICAgLy8gc3RvcmUgdXNlciBkZXRhaWxzIGFuZCBqd3QgdG9rZW4gaW4gbG9jYWwgc3RvcmFnZSB0byBrZWVwIHVzZXIgbG9nZ2VkIGluIGJldHdlZW4gcGFnZSByZWZyZXNoZXMKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeSh1c2VyKSk7CiAgICB9CgogICAgcmV0dXJuIHVzZXI7CiAgfSk7Cn0KCmZ1bmN0aW9uIGxvZ291dCgpIHsKICAvLyByZW1vdmUgdXNlciBmcm9tIGxvY2FsIHN0b3JhZ2UgdG8gbG9nIHVzZXIgb3V0CiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXInKTsKfQoKZnVuY3Rpb24gcmVnaXN0ZXIodXNlcikgewogIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgaGVhZGVyczogewogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICB9LAogICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXNlcikKICB9OwogIHJldHVybiBmZXRjaCgiL3VzZXJzL3JlZ2lzdGVyIiwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oaGFuZGxlUmVzcG9uc2UpOwp9CgpmdW5jdGlvbiBnZXRBbGwoKSB7CiAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgbWV0aG9kOiAnR0VUJywKICAgIGhlYWRlcnM6IGF1dGhIZWFkZXIoKQogIH07CiAgcmV0dXJuIGZldGNoKCIvdXNlcnMiLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7Cn0KCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKHJlc3BvbnNlKSB7CiAgcmV0dXJuIHJlc3BvbnNlLnRleHQoKS50aGVuKGZ1bmN0aW9uICh0ZXh0KSB7CiAgICB2YXIgZGF0YSA9IHRleHQgJiYgSlNPTi5wYXJzZSh0ZXh0KTsKCiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgICAgIC8vIGF1dG8gbG9nb3V0IGlmIDQwMSByZXNwb25zZSByZXR1cm5lZCBmcm9tIGFwaQogICAgICAgIGxvZ291dCgpOwogICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTsKICAgICAgfQoKICAgICAgdmFyIGVycm9yID0gZGF0YSAmJiBkYXRhLm1lc3NhZ2UgfHwgcmVzcG9uc2Uuc3RhdHVzVGV4dDsKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0KCiAgICByZXR1cm4gZGF0YTsKICB9KTsKfQ=="},{"version":3,"sources":["/Users/thanitnetprokaew/Desktop/yfhs/website/src/helpers/authservice/user.service.js"],"names":["authHeader","userService","login","logout","register","getAll","email","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","token","localStorage","setItem","removeItem","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":";AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB;AAGvBC,EAAAA,QAAQ,EAARA,QAHuB;AAIvBC,EAAAA,MAAM,EAANA;AAJuB,CAApB;;AAOP,SAASH,KAAT,CAAeI,KAAf,EAAsBC,QAAtB,EAAgC;AAE5B,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,wBAAwBN,cAAxB,CAAL,CACFO,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAAAE,IAAI,EAAI;AACV;AACA,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA7B;AACH;;AACD,WAAOA,IAAP;AACH,GATE,CAAP;AAUH;;AAED,SAASd,MAAT,GAAkB;AACd;AACAgB,EAAAA,YAAY,CAACE,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASjB,QAAT,CAAkBa,IAAlB,EAAwB;AACpB,MAAMT,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,IAAf;AAHa,GAAvB;AAKA,SAAOH,KAAK,oBAAoBN,cAApB,CAAL,CAAyCO,IAAzC,CAA8CC,cAA9C,CAAP;AACH;;AAED,SAASX,MAAT,GAAkB;AACd,MAAMG,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEV,UAAU;AAFA,GAAvB;AAIA,SAAOc,KAAK,WAAWN,cAAX,CAAL,CAAgCO,IAAhC,CAAqCC,cAArC,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBM,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBR,IAAhB,CAAqB,UAAAQ,IAAI,EAAI;AAChC,QAAMC,IAAI,GAAGD,IAAI,IAAIX,IAAI,CAACa,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAxB,QAAAA,MAAM;AACNyB,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AACD,UAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAON,IAAP;AACH,GAZM,CAAP;AAaH","sourcesContent":["import { authHeader } from './auth-header';\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getAll,\n};\n\nfunction login(email, password) {\n\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n    };\n\n    return fetch(`/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a jwt token in the response\n            if (user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n    return fetch(`/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n    return fetch(`/users`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n                location.reload(true);\n            }\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    });\n}\n"]}]}