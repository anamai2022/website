{"remainingRequest":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thanitnetprokaew/Desktop/yfhs/website/src/components/widgets/Step4.vue?vue&type=template&id=6a4930f0&scoped=true&","dependencies":[{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/src/components/widgets/Step4.vue","mtime":1655874569561},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/cache-loader/dist/cjs.js","mtime":1647752128109},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1647752181454},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/cache-loader/dist/cjs.js","mtime":1647752128109},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/index.js","mtime":1647752181454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "bg-white ex1", attrs: { id: "step4" } },
    [
      _vm._l(_vm.DataCQuestionnaire, function(link) {
        return _c(
          "div",
          { key: link.QuestionnaireId },
          [
            _vm.Step4 > 0
              ? _c("div", [_vm._v(_vm._s(_vm.Step4Title))])
              : _vm._e(),
            _vm._l(_vm.StepCount, function(value, index) {
              return _c(
                "div",
                { key: index, staticClass: "ex1" },
                [
                  _vm._v(
                    " " +
                      _vm._s(value.QuestionSeq) +
                      " : " +
                      _vm._s(value.QuestionName) +
                      " "
                  ),
                  _vm._l(value.Answers.QuestionAnswer, function(values, i) {
                    return _c("div", { key: i }, [
                      values.AnswerLevel === 0
                        ? _c("div", [
                            values.AnswerCategoryId === "checkbox" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "text" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "textarea" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("textarea", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder,
                                      rows: "4",
                                      cols: "50"
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "date" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "email" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "file" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "image" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "number" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "password" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "radio" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "url" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "tel" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerAttribute != null
                              ? _c("div", { staticClass: "ex1" }, [
                                  values.AnswerAttribute.inputType ===
                                    "checkbox" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "text" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "textarea" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("textarea", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder,
                                            rows: "4",
                                            cols: "50"
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "date" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "email" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "file" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "image" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "number" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "password" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "radio" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "url" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "tel" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e()
                                ])
                              : _vm._e()
                          ])
                        : _vm._e(),
                      values.AnswerLevel === 1
                        ? _c("div", { staticClass: "ex1" }, [
                            values.AnswerCategoryId === "checkbox" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "text" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "textarea" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("textarea", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder,
                                      rows: "4",
                                      cols: "50"
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "date" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "email" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "file" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "image" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "number" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "password" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "radio" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "url" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "tel" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerAttribute != null
                              ? _c("div", { staticClass: "ex1" }, [
                                  values.AnswerAttribute.inputType ===
                                    "checkbox" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "text" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "textarea" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("textarea", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder,
                                            rows: "4",
                                            cols: "50"
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "date" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "email" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "file" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "image" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "number" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "password" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "radio" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "url" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "tel" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e()
                                ])
                              : _vm._e()
                          ])
                        : _vm._e(),
                      values.AnswerLevel === 2
                        ? _c("div", { staticClass: "ex2" }, [
                            values.AnswerCategoryId === "checkbox" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "text" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "textarea" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("textarea", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder,
                                      rows: "4",
                                      cols: "50"
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "date" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "email" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "file" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "image" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "number" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "password" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "radio" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "url" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "tel" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerAttribute != null
                              ? _c("div", { staticClass: "ex1" }, [
                                  values.AnswerAttribute.inputType ===
                                    "checkbox" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "text" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "textarea" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("textarea", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder,
                                            rows: "4",
                                            cols: "50"
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "date" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "email" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "file" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "image" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "number" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "password" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "radio" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "url" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "tel" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e()
                                ])
                              : _vm._e()
                          ])
                        : _vm._e(),
                      values.AnswerLevel === 3
                        ? _c("div", { staticClass: "ex3" }, [
                            values.AnswerCategoryId === "checkbox" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "text" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "textarea" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("textarea", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      value: "",
                                      placeholder: values.AnswerPlaceholder,
                                      rows: "4",
                                      cols: "50"
                                    }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "date" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "email" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "file" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "image" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "number" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "password" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "radio" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  }),
                                  _vm._v(" " + _vm._s(values.AnswersName) + " ")
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "url" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerCategoryId === "tel" &&
                            values.AnswerShow == true
                              ? _c("div", { staticClass: "ex1" }, [
                                  _vm._v(
                                    " " + _vm._s(values.AnswersName) + " "
                                  ),
                                  _c("input", {
                                    attrs: {
                                      type: values.AnswerCategoryId,
                                      "v-bind": values.AnswerId,
                                      name: values.AnswerSeq,
                                      placeholder: values.AnswerPlaceholder
                                    },
                                    domProps: { value: values.AnswerId }
                                  })
                                ])
                              : _vm._e(),
                            values.AnswerAttribute != null
                              ? _c("div", { staticClass: "ex1" }, [
                                  values.AnswerAttribute.inputType ===
                                    "checkbox" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "text" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "textarea" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("textarea", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            value: "",
                                            placeholder:
                                              values.AnswerPlaceholder,
                                            rows: "4",
                                            cols: "50"
                                          }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "date" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "email" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "file" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "image" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "number" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "password" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType ===
                                    "radio" && values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        }),
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        )
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "url" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e(),
                                  values.AnswerAttribute.inputType === "tel" &&
                                  values.AnswerShow == true
                                    ? _c("div", { staticClass: "ex1" }, [
                                        _vm._v(
                                          " " + _vm._s(values.AnswersName) + " "
                                        ),
                                        _c("input", {
                                          attrs: {
                                            type:
                                              values.AnswerAttribute.inputType,
                                            "v-bind": values.AnswerId,
                                            name: values.AnswerSeq,
                                            placeholder:
                                              values.AnswerPlaceholder
                                          },
                                          domProps: { value: values.AnswerId }
                                        })
                                      ])
                                    : _vm._e()
                                ])
                              : _vm._e()
                          ])
                        : _vm._e()
                    ])
                  })
                ],
                2
              )
            })
          ],
          2
        )
      }),
      _c("br")
    ],
    2
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}