{"remainingRequest":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thanitnetprokaew/Desktop/yfhs/website/src/router/views/questionnaire/index.vue?vue&type=style&index=0&id=4ffb1150&scoped=true&lang=css&","dependencies":[{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/src/router/views/questionnaire/index.vue","mtime":1655867756910},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/css-loader/dist/cjs.js","mtime":1647752179875},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1647752181454},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/postcss-loader/src/index.js","mtime":1647752181209},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/cache-loader/dist/cjs.js","mtime":1647752128109},{"path":"/Users/thanitnetprokaew/Desktop/yfhs/website/node_modules/vue-loader/lib/index.js","mtime":1647752181454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZXgxIHsKICBtYXJnaW4tbGVmdDogMjBweDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA","file":"index.vue","sourceRoot":"src/router/views/questionnaire","sourcesContent":["<script>\nimport _ from \"underscore\";\nimport { uuid } from \"uuidv4\";\nimport appConfig from \"@/app.config\";\nimport { form } from \"@/router/views/questionnaire/configs/list.js\";\nimport questionnaireData from \"@/data/questionnaire.json\";\nimport Footer from \"@/components/footers.vue\";\nimport Menu from \"@/components/Menu.vue\";\nimport Questionnaire from \"@/components/widgets/Questionnaire.vue\";\nexport default {\n  page: {\n    title: \"Questionnaire\",\n    meta: [\n      {\n        name: \"description\",\n        content: appConfig.description,\n      },\n    ],\n  },\n  components: { Footer, Menu, Questionnaire },\n  data() {\n    return {\n      title: appConfig.description,\n      form: this.form,\n      mode: null,\n      questionnaire: null,\n      btnPermisActionName: null,\n      btnPermisFunctionName: null,\n    };\n  },\n  computed: {},\n  beforeMount() {\n    this.$route.query.id;\n    if (this.$route.params.id != null) {\n      console.log(\"Update\", this.$route.params.id);\n      this.mode = \"Upadate\";\n      this.form = from;\n      this.btnPermisActionName = \"Upadate\";\n      this.btnPermisFunctionName = \"Questionnaire\";\n    } else {\n      console.log(\"Create\");\n      this.mode = \"Create\";\n      this.form = form;\n      this.btnPermisActionName = \"Create\";\n      this.btnPermisFunctionName = \"Questionnaire\";\n      this.questionnaire = questionnaireData;\n    }\n  },\n  methods: {\n    submitItem(){\n      console.log(\"Check Form\")\n    },\n  },\n  mounted() {},\n};\n</script>\n\n<template>\n  <div>\n    <Menu />\n    <form class=\"needs-validation\"  @submit.prevent=\"submitItem()\">\n      <Questionnaire class=\"section bg-white ex1\"  :form=\"form\" :mode=\"mode\" :questionnaire=\"questionnaire\" />\n    </form>\n    <Footer />\n  </div>\n</template>\n\n<style scoped>\n.ex1 {\n  margin-left: 20px;\n}\n</style>\n"]}]}